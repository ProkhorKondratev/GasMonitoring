# Generated by Django 4.2.4 on 2023-08-11 09:57

import cesium.models
import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cesium', '0004_tileprovider_alter_providerviewmodel_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CesiumBilboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Название объекта', max_length=255, null=True, verbose_name='Название')),
                ('show', models.BooleanField(default=True, help_text='Включает отображение объекта', verbose_name='Отображение')),
                ('heightReference', models.IntegerField(choices=[(0, 'Без изменений'), (1, 'Прижать к поверхности Земли'), (2, 'Использовать высоту относительно точки на поверхности Земли')], default=0, help_text='Выравнивание значка по высоте', verbose_name='Выравнивание по высоте')),
                ('scaleByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет масштабирование объекта в зависимости от расстояния до камеры', verbose_name='Масштабирование по расстоянию')),
                ('translucencyByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет прозрачность объекта в зависимости от расстояния до камеры', verbose_name='Прозрачность по расстоянию')),
                ('distanceDisplayCondition', models.JSONField(default=cesium.models.default_near_far, help_text='Устанавливает диапазон, в котором объект будет отображаться', verbose_name='Отображение по расстоянию')),
                ('scale', models.FloatField(default=1.0, help_text='Масштабирование значка', verbose_name='Масштабирование')),
                ('pixelOffset', models.JSONField(default=cesium.models.default_cartesian2, help_text='Смещение объекта относительно координат в пикселях', verbose_name='Смещение')),
                ('eyeOffset', models.JSONField(default=cesium.models.default_cartesian3, help_text='Смещение объекта относительно камеры', verbose_name='Смещение относительно камеры')),
                ('horizontalOrigin', models.IntegerField(choices=[(0, 'По центру'), (1, 'Слева'), (2, 'Справа')], default=0, help_text='Горизонтальное выравнивание объекта', verbose_name='Горизонтальное выравнивание')),
                ('verticalOrigin', models.IntegerField(choices=[(0, 'По центру'), (1, 'Снизу'), (3, 'Сверху')], default=0, help_text='Вертикальное выравнивание объекта', verbose_name='Вертикальное выравнивание')),
                ('pixelOffsetScaleByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет смещение объекта в зависимости от расстояния до камеры', verbose_name='Смещение по расстоянию')),
                ('image', models.ImageField(default=None, help_text='Иконка для визуализации типа объекта', upload_to='bilboard_images', verbose_name='Иконка типа')),
                ('color', colorfield.fields.ColorField(default='#FF000000', help_text='Цвет значка', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет')),
                ('rotation', models.FloatField(default=0.0, help_text='Поворот значка', verbose_name='Поворот')),
                ('alignedAxis', models.JSONField(default=cesium.models.default_cartesian3, help_text='Ось выравнивания значка', verbose_name='Ось выравнивания')),
                ('width', models.IntegerField(default=64, help_text='Ширина значка (в пикселях)', verbose_name='Ширина')),
                ('height', models.IntegerField(default=64, help_text='Высота значка (в пикселях)', verbose_name='Высота')),
            ],
            options={
                'verbose_name': 'Стиль значка',
                'verbose_name_plural': 'Стили значков',
            },
        ),
        migrations.CreateModel(
            name='CesiumLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Название объекта', max_length=255, null=True, verbose_name='Название')),
                ('show', models.BooleanField(default=True, help_text='Включает отображение объекта', verbose_name='Отображение')),
                ('heightReference', models.IntegerField(choices=[(0, 'Без изменений'), (1, 'Прижать к поверхности Земли'), (2, 'Использовать высоту относительно точки на поверхности Земли')], default=0, help_text='Выравнивание значка по высоте', verbose_name='Выравнивание по высоте')),
                ('scaleByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет масштабирование объекта в зависимости от расстояния до камеры', verbose_name='Масштабирование по расстоянию')),
                ('translucencyByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет прозрачность объекта в зависимости от расстояния до камеры', verbose_name='Прозрачность по расстоянию')),
                ('distanceDisplayCondition', models.JSONField(default=cesium.models.default_near_far, help_text='Устанавливает диапазон, в котором объект будет отображаться', verbose_name='Отображение по расстоянию')),
                ('scale', models.FloatField(default=1.0, help_text='Масштабирование значка', verbose_name='Масштабирование')),
                ('pixelOffset', models.JSONField(default=cesium.models.default_cartesian2, help_text='Смещение объекта относительно координат в пикселях', verbose_name='Смещение')),
                ('eyeOffset', models.JSONField(default=cesium.models.default_cartesian3, help_text='Смещение объекта относительно камеры', verbose_name='Смещение относительно камеры')),
                ('horizontalOrigin', models.IntegerField(choices=[(0, 'По центру'), (1, 'Слева'), (2, 'Справа')], default=0, help_text='Горизонтальное выравнивание объекта', verbose_name='Горизонтальное выравнивание')),
                ('verticalOrigin', models.IntegerField(choices=[(0, 'По центру'), (1, 'Снизу'), (3, 'Сверху')], default=0, help_text='Вертикальное выравнивание объекта', verbose_name='Вертикальное выравнивание')),
                ('pixelOffsetScaleByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет смещение объекта в зависимости от расстояния до камеры', verbose_name='Смещение по расстоянию')),
                ('text', models.CharField(blank=True, default=None, help_text='Текст метки', max_length=255, null=True, verbose_name='Текст')),
                ('font', models.CharField(default='30px sans-serif', help_text='Шрифт метки. Пример: 30px sans-serif', max_length=255, verbose_name='Шрифт')),
                ('style', models.IntegerField(choices=[(0, 'Заливка без обводки'), (1, 'Обводка без заливки'), (2, 'Заливка и обводка')], default=2, help_text='Стиль метки', verbose_name='Стиль')),
                ('showBackground', models.BooleanField(default=False, help_text='Включает отображение фона метки', verbose_name='Отображение фона')),
                ('backgroundColor', colorfield.fields.ColorField(default='#FF000000', help_text='Цвет фона метки', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет фона')),
                ('backgroundPadding', models.JSONField(default=cesium.models.default_cartesian2, help_text='Отступ фона метки от текста', verbose_name='Отступ фона')),
                ('fillColor', colorfield.fields.ColorField(default='#FF000000', help_text='Цвет заливки метки', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет заливки')),
                ('outlineColor', colorfield.fields.ColorField(default='#FF000000', help_text='Цвет обводки метки', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет обводки')),
                ('outlineWidth', models.FloatField(default=1.0, help_text='Ширина обводки метки (в пикселях)', verbose_name='Ширина обводки')),
            ],
            options={
                'verbose_name': 'Стиль надписи',
                'verbose_name_plural': 'Стили надписей',
            },
        ),
        migrations.CreateModel(
            name='CesiumPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Название объекта', max_length=255, null=True, verbose_name='Название')),
                ('show', models.BooleanField(default=True, help_text='Включает отображение объекта', verbose_name='Отображение')),
                ('heightReference', models.IntegerField(choices=[(0, 'Без изменений'), (1, 'Прижать к поверхности Земли'), (2, 'Использовать высоту относительно точки на поверхности Земли')], default=0, help_text='Выравнивание значка по высоте', verbose_name='Выравнивание по высоте')),
                ('scaleByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет масштабирование объекта в зависимости от расстояния до камеры', verbose_name='Масштабирование по расстоянию')),
                ('translucencyByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет прозрачность объекта в зависимости от расстояния до камеры', verbose_name='Прозрачность по расстоянию')),
                ('distanceDisplayCondition', models.JSONField(default=cesium.models.default_near_far, help_text='Устанавливает диапазон, в котором объект будет отображаться', verbose_name='Отображение по расстоянию')),
                ('pixelSize', models.FloatField(default=1.0, help_text='Размер точки (в пикселях)', verbose_name='Размер')),
                ('color', colorfield.fields.ColorField(default='#FF000000', help_text='Цвет точки', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет')),
                ('outlineColor', colorfield.fields.ColorField(default='#FF000000', help_text='Цвет обводки точки', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет обводки')),
                ('outlineWidth', models.FloatField(default=1.0, help_text='Ширина обводки точки', verbose_name='Ширина обводки')),
            ],
            options={
                'verbose_name': 'Стиль точки',
                'verbose_name_plural': 'Стили точек',
            },
        ),
        migrations.CreateModel(
            name='CesiumPolylineMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Color', help_text='Название материала', max_length=50, verbose_name='Название материала')),
                ('type', models.CharField(choices=[('Color', 'Цвет'), ('PolylineDash', 'Пунктир')], default='Color', help_text='Тип материала', max_length=20, verbose_name='Тип материала')),
                ('color', colorfield.fields.ColorField(default='#FF000000', help_text='Позволяет установить цвет заливки линии', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет заливки')),
                ('gapColor', colorfield.fields.ColorField(default='#FF000000', help_text='Позволяет установить цвет промежутков линии', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет промежутков линии')),
                ('dashLength', models.IntegerField(default=16, help_text='Позволяет установить длину пунктира в пикселях', verbose_name='Длина пунктира в пикселях')),
            ],
            options={
                'verbose_name': 'Стиль текстуры линии',
                'verbose_name_plural': 'Стили текстур линий',
            },
        ),
        migrations.CreateModel(
            name='PolygonMaterialStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Color', help_text='Название материала', max_length=50, verbose_name='Название материала')),
                ('type', models.CharField(choices=[('Color', 'Цвет')], default='Color', help_text='Тип материала', max_length=20, verbose_name='Тип материала')),
                ('color', colorfield.fields.ColorField(default='#FF0000', help_text='Позволяет установить цвет заливки полигона', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет заливки')),
            ],
            options={
                'verbose_name': 'Стиль текстуры полигона',
                'verbose_name_plural': 'Стили текстур полигонов',
            },
        ),
        migrations.CreateModel(
            name='CesiumPolyline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Название объекта', max_length=255, null=True, verbose_name='Название')),
                ('show', models.BooleanField(default=True, help_text='Включает отображение объекта', verbose_name='Отображение')),
                ('heightReference', models.IntegerField(choices=[(0, 'Без изменений'), (1, 'Прижать к поверхности Земли'), (2, 'Использовать высоту относительно точки на поверхности Земли')], default=0, help_text='Выравнивание значка по высоте', verbose_name='Выравнивание по высоте')),
                ('scaleByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет масштабирование объекта в зависимости от расстояния до камеры', verbose_name='Масштабирование по расстоянию')),
                ('translucencyByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет прозрачность объекта в зависимости от расстояния до камеры', verbose_name='Прозрачность по расстоянию')),
                ('distanceDisplayCondition', models.JSONField(default=cesium.models.default_near_far, help_text='Устанавливает диапазон, в котором объект будет отображаться', verbose_name='Отображение по расстоянию')),
                ('width', models.FloatField(default=1.0, help_text='Ширина линии (в пикселях)', verbose_name='Ширина')),
                ('clampToGround', models.BooleanField(default=False, help_text='Прижать линию к поверхности Земли', verbose_name='Прижать к поверхности Земли')),
                ('shadows', models.IntegerField(choices=[(0, 'Нет тени'), (1, 'Принимать и отбрасывать тень'), (2, 'Отбрасывать тень'), (3, 'Принимать тень')], default=0, help_text='Тень линии', verbose_name='Тень')),
                ('zIndex', models.IntegerField(default=0, help_text='Определяет индекс, используемый для упорядочивания линий при отображении. Изображается только тогда, когда параметр ClampToGround установлен в true', verbose_name='Z-индекс')),
                ('depthFailMaterial', models.ForeignKey(help_text='Материал, использующийся для линии, когда она проходит под рельефом', on_delete=django.db.models.deletion.CASCADE, related_name='PolylineDepthFailMaterial', related_query_name='PolylineDepthFailMaterial', to='cesium.cesiumpolylinematerial', verbose_name='Материал под рельефом')),
                ('material', models.ForeignKey(help_text='Стандартный материал линии', on_delete=django.db.models.deletion.CASCADE, related_name='PolylineMaterial', related_query_name='PolylineMaterial', to='cesium.cesiumpolylinematerial', verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Стиль линии',
                'verbose_name_plural': 'Стили линий',
            },
        ),
        migrations.CreateModel(
            name='CesiumPolygon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Название объекта', max_length=255, null=True, verbose_name='Название')),
                ('show', models.BooleanField(default=True, help_text='Включает отображение объекта', verbose_name='Отображение')),
                ('heightReference', models.IntegerField(choices=[(0, 'Без изменений'), (1, 'Прижать к поверхности Земли'), (2, 'Использовать высоту относительно точки на поверхности Земли')], default=0, help_text='Выравнивание значка по высоте', verbose_name='Выравнивание по высоте')),
                ('scaleByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет масштабирование объекта в зависимости от расстояния до камеры', verbose_name='Масштабирование по расстоянию')),
                ('translucencyByDistance', models.JSONField(default=cesium.models.default_near_far_scalar, help_text='Определяет прозрачность объекта в зависимости от расстояния до камеры', verbose_name='Прозрачность по расстоянию')),
                ('distanceDisplayCondition', models.JSONField(default=cesium.models.default_near_far, help_text='Устанавливает диапазон, в котором объект будет отображаться', verbose_name='Отображение по расстоянию')),
                ('height', models.FloatField(default=0.0, help_text='Высота полигона (в метрах) относительно поверхности Земли', verbose_name='Высота')),
                ('extrudedHeight', models.FloatField(default=0.0, help_text='Высота полигона в 3-х мерном пространстве (в метрах)', verbose_name='Высота полигона')),
                ('extrudedHeightReference', models.IntegerField(choices=[(0, 'Без изменений'), (1, 'Прижать к поверхности Земли'), (2, 'Использовать высоту относительно точки на поверхности Земли')], default=0, help_text='Определяет поверхность, относительно которой считается высота полигона в 3-х мерном пространстве', verbose_name='Поверхность высоты полигона')),
                ('stRotation', models.FloatField(default=0.0, help_text='Определяет поворот текстуры полигона против часовой стрелки с севера', verbose_name='Поворот')),
                ('fill', models.BooleanField(default=True, help_text='Определяет, будет ли отображаться заливка полигона', verbose_name='Заливка')),
                ('outline', models.BooleanField(default=False, help_text='Определяет, будет ли отображаться контур полигона', verbose_name='Контур')),
                ('outlineColor', colorfield.fields.ColorField(default='#FF000000', help_text='Позволяет установить цвет контура полигона', image_field=None, max_length=18, samples=[('#FF0000', 'Красный'), ('#00FF00', 'Зеленый'), ('#0000FF', 'Синий'), ('#FFFF00', 'Желтый')], verbose_name='Цвет контура')),
                ('outlineWidth', models.FloatField(default=1.0, help_text='Ширина контура полигона (в пикселях) - временно не работает по ошибке в CesiumJS', verbose_name='Ширина контура')),
                ('closeTop', models.BooleanField(default=True, help_text='Если false, то оставляет открытой верхнюю часть полигона', verbose_name='Закрыть верх')),
                ('closeBottom', models.BooleanField(default=True, help_text='Если false, то оставляет открытой нижнюю часть полигона', verbose_name='Закрыть низ')),
                ('shadows', models.IntegerField(choices=[(0, 'Нет тени'), (1, 'Принимать и отбрасывать тень'), (2, 'Отбрасывать тень'), (3, 'Принимать тень')], default=0, help_text='Тень полигона', verbose_name='Тень')),
                ('zIndex', models.IntegerField(default=0, help_text='Определяет индекс, используемый для упорядочивания полигонов при отображении. Применяется только тогда, когда параметры Height и ExtrudedHeight установлены не установлены', verbose_name='Z-индекс')),
                ('material', models.ForeignKey(help_text='Определяет материал, используемый для отображения заливки полигона', on_delete=django.db.models.deletion.CASCADE, related_name='PolygonMaterial', related_query_name='PolygonMaterial', to='cesium.polygonmaterialstyle', verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Стиль полигона',
                'verbose_name_plural': 'Стили полигонов',
            },
        ),
    ]
